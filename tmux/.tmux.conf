# Set the current tmux version (use this variable on if-shell commands)
run-shell "tmux set-environment -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# Remap prefix to Ctrl+a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

set -g history-limit 100000

# Message display time. Default 750ms
set-option -g display-time 2500

# Lower the repeat time. Default 500ms
set-option -g repeat-time 250

# No delay for escape key press
set -sg escape-time 0

# Reload config - https://devel.tech/tips/n/tMuXm4vP/reloading-config-from-inside-tmux/
bind r source-file ~/.tmux.conf \; display-message "Config reloaded"

# Allow jumping between words with Ctrl+Left/Right
set-window-option -g xterm-keys on

set -g mouse on

# Fix colors
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# ---- Copymode {{{

set-window-option -g mode-keys vi
bind-key Escape copy-mode   # Enter copy mode; default [

bind -r C-y run "tmux show-buffer | xclip -in -selection clipboard &> /dev/null"\; display-message "Copy To System Clipboard"
bind -r C-p run "tmux set-buffer -- \"$(xclip -out -selection clipboard)\"" \; display-message "Copy To Tmux Clipboard"

# Note: rectangle-toggle (aka Visual Block Mode) > hit v then C-v to trigger it
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"\; display-message "Copy To System Clipboard"

# Remove possibility of accidentally resizing a pane when dragging mouse in copy mode
unbind -T copy-mode-vi MouseDragEnd1Pane

#}}}
# ---- Panes and windows {{{

# Disable autorenaming of panes
set -g allow-rename off

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

# Renumber sessions
set-hook -g session-created "run-shell ~/bin/renumber-sessions.sh"
set-hook -g session-closed  "run-shell ~/bin/renumber-sessions.sh"

# Open a new pane in the same directory as the current pane
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Switch between sessions
bind -r ( switch-client -p
bind -r ) switch-client -n

# Resize panes
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5

# Switch panes repeatedly
bind -r j select-pane -D
bind -r k select-pane -U
bind -r h select-pane -L
bind -r l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-vim keys without prefix key to change windows
bind -n M-n next-window
bind -n M-p previous-window

# }}}
# ---- Design {{{

# 12 hour clock
setw -g clock-mode-style 12

setw -g mode-style bg=colour4 # alternatively 238 (Dark gray)

# The panes
set -g pane-border-style bg=colour235,fg=colour238
set -g pane-active-border-style bg=colour236,fg=colour51

# The statusbar
set -g status-position bottom
set -g status-style bg=colour234,fg=colour137,dim
set -g status-left '#[fg=colour233,bg=colour245,bold] #S '
set -g status-right '#[fg=colour250,bold] #(curl -s -f "wttr.in/?format=1")  #[fg=colour233,bg=colour241,bold] %Y-%m-%d #[fg=colour233,bg=colour245,bold] %H:%M '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style fg=colour81,bg=colour238,bold
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

setw -g window-status-style fg=colour138,bg=colour235,none
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style fg=colour255,bg=colour1,bold

# The messages
set -g message-style fg=colour232,bg=colour166,bold

# }}}

# Run host specific config
if-shell "test -f ~/.tmux-local.conf" "source ~/.tmux-local.conf"

